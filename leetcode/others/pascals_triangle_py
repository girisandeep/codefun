'''
Pascal's Triangle
Solution
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.


In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]
'''


class Solution(object):
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        result = []
        if numRows < 1:
            return result
        row = [1]
        result.append(row)
        prev = row
        for i in range(1, numRows):
            row = []
            result.append(row)
            prev_val = 0
            for e in prev:
                row.append(prev_val+e)
                prev_val = e
            row.append(prev_val + 0)
            prev = row
        return result
